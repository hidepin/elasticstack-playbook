---
# file: roles/elasticsearch/tasks/main.yml
- name: upgrade elasticsearch
  include: upgrade.yml
  when: "{{ upgrade|default('false') }}"

- name: elasticsearch install
  package:
    name: elasticsearch
    state: latest
  register: result
  until: result | success
  retries: 3
  delay: 5

- name: elasticsearch plugin install
  shell: |
    /usr/share/elasticsearch/bin/elasticsearch-plugin install --batch {{ item.plugin }}
  args:
    creates: "{{ item.creates }}"
  notify: elasticsearch restart
  with_items: "{{ elasticsearch_plugins }}"
  register: result
  until: result | success
  retries: 3
  delay: 5

- block:
  - name: elasticsearch version check
    shell: basename /usr/share/elasticsearch/lib/elasticsearch* | sed 's/.*-\(.*\).jar/\1/'
    register: elasticsearch_version
    changed_when: false

  - name: elasticsearch plugin install
    shell: |
      /usr/share/elasticsearch/bin/elasticsearch-plugin install --batch com.floragunn:search-guard-{{ elasticsearch_version.stdout|regex_replace('\..*', '') }}:{{ elasticsearch_version.stdout }}-{{ search_guard_version }}
    args:
      creates: "/usr/share/elasticsearch/plugins/search-guard-{{ elasticsearch_version.stdout|regex_replace('\\..*', '') }}"
    notify: elasticsearch restart
    register: result
    until: result | success
    retries: 3
    delay: 5

  - block:
      - name: create keystore.jks
        command: "keytool -genkeypair -keystore /tmp/keystore.jks -storepass 'password' -keypass 'password' -dname 'CN=kirk,OU=client,O=client,L=test, C=de'"
        args:
          creates: /etc/elasticsearch/keystore.jks

      - name: keystore check
        shell: "cat /tmp/keystore.jks|base64 -w0"
        args:
          creates: /etc/elasticsearch/keystore.jks
        register: elasticsearch_keystore
        changed_when: false

      - name: delete temporary keystore.jks
        file:
          path: /tmp/keystore.jks
          state: absent

    run_once: true

  - name: keystore deploy
    shell: "echo {{ elasticsearch_keystore.stdout|default() }}|base64 -d > /etc/elasticsearch/keystore.jks"
    args:
      creates: /etc/elasticsearch/keystore.jks

  when: search_guard_enabled

- block:
  - name: create elasticsearch systemd dir
    file:
      path: "/etc/systemd/system/elasticsearch.service.d"
      state: directory
      owner: root
      group: root
      mode: 0755

  - name: elasticsarch systemd setting
    copy:
      src: limit_memlock.conf
      dest: /etc/systemd/system/elasticsearch.service.d
      owner: root
      group: root
      mode: 0644
      backup: yes
    register: is_elasticsearch_systemd_setting
    notify: elasticsearch restart

  - name: elasticsarch config setting
    template:
      src: elasticsearch.yml.j2
      dest: /etc/elasticsearch/elasticsearch.yml
      owner: root
      group: elasticsearch
      mode: 0660
      backup: yes
    register: is_elasticsearch_setting
    notify: elasticsearch restart

  - name: elasticsarch jvm setting
    template:
      src: jvm.options.j2
      dest: /etc/elasticsearch/jvm.options
      owner: root
      group: elasticsearch
      mode: 0664
      backup: yes
    register: is_elasticsearch_jvm_setting
    notify: elasticsearch restart

  always:
  - name: elk-common backup settings
    include: backup.yml
    with_flattened:
      - "{{ is_elasticsearch_systemd_setting|default() }}"
      - "{{ is_elasticsearch_setting|default() }}"
      - "{{ is_elasticsearch_jvm_setting|default() }}"
    loop_control:
      loop_var: backup_item

- name: enable elasticsearch service
  service:
    name: elasticsearch
    state: started
    enabled: yes
    daemon_reload: yes
