---
# file: roles/elasticsearch/tasks/searchguard.yml
- name: elasticsearch version check
  shell: basename /usr/share/elasticsearch/lib/elasticsearch* | sed 's/.*-\(.*\).jar/\1/'
  register: elasticsearch_version
  changed_when: false

- name: elasticsearch search guard plugin install
  shell: |
    /usr/share/elasticsearch/bin/elasticsearch-plugin install --batch com.floragunn:search-guard-{{ elasticsearch_version.stdout|regex_replace('\..*', '') }}:{{ elasticsearch_version.stdout }}-{{ searchguard_version }}
  args:
    creates: "/usr/share/elasticsearch/plugins/search-guard-{{ elasticsearch_version.stdout|regex_replace('\\..*', '') }}"
  notify: elasticsearch restart
  register: result
  until: result | success
  retries: 3
  delay: 5

- name: openssl install
  package:
    name: openssl
    state: present
  register: result
  until: result | success
  retries: 3
  delay: 5

- name: create searchguard ca dir
  file:
    path: "{{ item.path }}"
    owner: "{{ item.owner }}"
    group: "{{ item.group }}"
    mode: "{{ item.mode}}"
    state: directory
  with_items:
    - { path: "{{ searchguard_ca_dir }}", owner: 'root', group: 'elasticsearch', mode: '0750' }
    - { path: "{{ searchguard_ca_dir }}/searchguard-ca", owner: 'root', group: 'elasticsearch', mode: '0750' }
    - { path: "{{ searchguard_ca_dir }}/searchguard-ca/certs", owner: 'root', group: 'elasticsearch', mode: '0750' }
    - { path: "{{ searchguard_ca_dir }}/searchguard-ca/db", owner: 'root', group: 'elasticsearch', mode: '0750' }
    - { path: "{{ searchguard_ca_dir }}/searchguard-ca/private", owner: 'root', group: 'elasticsearch', mode: '0750' }

- name: create searchguard ca index file
  command: "touch {{ searchguard_ca_dir }}/searchguard-ca/db/{{ item.name }}.index"
  args:
    creates: "{{ searchguard_ca_dir }}/searchguard-ca/db/{{ item.name }}.index"
  with_items: "{{ searchguard_openssl_cnf }}"

- name: create searchguard ca serial file
  shell: "openssl rand -hex 16 > {{ searchguard_ca_dir }}/searchguard-ca/db/{{ item.name }}.serial"
  args:
    creates: "{{ searchguard_ca_dir }}/searchguard-ca/db/{{ item.name}}.serial"
  with_items: "{{ searchguard_openssl_cnf }}"

- name: searchguard ca config setting
  template:
    src: ca.cnf.j2
    dest: "{{ searchguard_ca_dir }}/{{ item.name }}.cnf"
    owner: root
    group: elasticsearch
    mode: 0660
  with_items: "{{ searchguard_openssl_cnf }}"

- name: check truststore.jks
  stat:
    path: "{{ searchguard_ca_dir }}/truststore.jks"
  register: truststore_stat

- block:
    - name: create searchguard ca private key and csr
      command: >
        openssl req -new
        -config {{ searchguard_ca_dir }}/{{ item.name }}.cnf
        -out {{ searchguard_ca_dir }}/searchguard-ca/{{ item.name }}.csr
        -keyout {{ searchguard_ca_dir }}/searchguard-ca/private/{{ item.name }}.key
        -batch
        -passout pass:password
      args:
        creates: "{{ searchguard_ca_dir }}/searchguard-ca/private/{{ item.name }}.key"
      with_items: "{{ searchguard_openssl_cnf }}"

    - name: create searchguard ca crt
      command: >
        openssl ca{% if item.root %} -selfsign{% endif %}
        -config {{ searchguard_ca_dir }}/root-ca.cnf
        -in {{ searchguard_ca_dir }}/searchguard-ca/{{ item.name }}.csr
        -out {{ searchguard_ca_dir }}/searchguard-ca/{{ item.name }}.crt
        -extensions {{ item.name|replace('-', '_') }}_ext
        -batch
        -passin pass:password
      args:
        creates: "{{ searchguard_ca_dir }}/searchguard-ca/{{ item.name }}.crt"
      with_items: "{{ searchguard_openssl_cnf }}"

    - name: create ca crt pem
      command: >
        openssl x509
        -in {{ searchguard_ca_dir }}/searchguard-ca/{{ item.name }}.crt
        -out {{ searchguard_ca_dir }}/searchguard-ca/{{ item.name }}.pem
        -outform PEM
      args:
        creates: "{{ searchguard_ca_dir }}/searchguard-ca/{{ item.name }}.pem"
      with_items: "{{ searchguard_openssl_cnf }}"

    - name: create truststore.jks
      command: >
        keytool -import
        -keystore {{ searchguard_ca_dir }}/truststore.jks
        -storepass password
        -noprompt
        -alias root-ca-chain
        -file {{ searchguard_ca_dir }}/searchguard-ca/root-ca.pem
      args:
        creates: "{{ searchguard_ca_dir }}/truststore.jks"

    - name: truststore store
      shell: "cat {{ searchguard_ca_dir }}/truststore.jks|base64 -w0"
      register: elasticsearch_truststore

    - name: chain-ca pem store
      shell: "cat {{ searchguard_ca_dir }}/searchguard-ca/signing-ca.pem {{ searchguard_ca_dir }}/searchguard-ca/root-ca.pem|base64 -w0"
      register: elasticsearch_chain_ca_pem

    - name: signing-ca crt store
      shell: "cat {{ searchguard_ca_dir }}/searchguard-ca/signing-ca.crt|base64 -w0"
      register: elasticsearch_signing_ca_crt

    - name: signing-ca private key store
      shell: "cat {{ searchguard_ca_dir }}/searchguard-ca/private/signing-ca.key|base64 -w0"
      register: elasticsearch_signing_ca_private_key

  run_once: true
  when: not truststore_stat.stat.exists

- name: check keystore.jks
  stat:
    path: "{{ searchguard_ca_dir }}/keystore.jks"
  register: keystore_stat

- name: truststore deploy
  shell: "echo {{ elasticsearch_truststore.stdout|default() }}|base64 -d > {{ searchguard_ca_dir }}/truststore.jks"
  args:
    creates: "{{ searchguard_ca_dir }}/truststore.jks"

- name: chain-ca pem deploy
  shell: "echo {{ elasticsearch_chain_ca_pem.stdout|default() }}|base64 -d > {{ searchguard_ca_dir }}/chain-ca.pem"
  args:
    creates: "{{ searchguard_ca_dir }}/chain-ca.pem"

- name: siginig-ca crt deploy
  shell: "echo {{ elasticsearch_signing_ca_crt.stdout|default() }}|base64 -d > {{ searchguard_ca_dir }}/searchguard-ca/signing-ca.crt"
  args:
    creates: "{{ searchguard_ca_dir }}/searchguard-ca/signing-ca.crt"

- name: siginig-ca private key deploy
  shell: "echo {{ elasticsearch_signing_ca_private_key.stdout|default() }}|base64 -d > {{ searchguard_ca_dir }}/searchguard-ca/private/signing-ca.key"
  args:
    creates: "{{ searchguard_ca_dir }}/searchguard-ca/private/signing-ca.key"

- block:
    - name: create keystore.jks
      command: >
        keytool -genkeypair
        -alias {{ ansible_hostname }}
        -keystore {{ searchguard_ca_dir }}/keystore.jks
        -keyalg    RSA
        -keysize   2048
        -validity  3650
        -sigalg SHA256withRSA
        -keypass password
        -storepass password
        -dname "CN={{ ansible_nodename }},OU=client,O=client,C=JP"
        -ext "san=dns:{{ ansible_nodename }},ip:{{ ansible_default_ipv4.address }},dns:localhost,ip:127.0.0.1,oid:1.2.3.4.5.5"
      args:
        creates: "{{ searchguard_ca_dir }}/keystore.jks"

    - name: create keystore csr
      command: >
        keytool -certreq
        -alias {{ ansible_hostname }}
        -keystore {{ searchguard_ca_dir }}/keystore.jks
        -file {{ searchguard_ca_dir }}/keystore.csr
        -keyalg  RSA
        -keypass password
        -storepass password
        -dname "CN={{ ansible_nodename }},OU=client,O=client,C=JP"
        -ext "san=dns:{{ ansible_nodename }},ip:{{ ansible_default_ipv4.address }},dns:localhost,ip:127.0.0.1,oid:1.2.3.4.5.5"
      args:
        creates: "{{ searchguard_ca_dir }}/keystore.csr"

    - name: create keystore pem
      command: >
        openssl ca
        -config {{ searchguard_ca_dir }}/signing-ca.cnf
        -in {{ searchguard_ca_dir }}/keystore.csr
        -out {{ searchguard_ca_dir }}/keystore.pem
        -notext
        -extensions v3_req
        -extensions server_ext
        -batch
        -passin pass:password
      args:
        creates: "{{ searchguard_ca_dir }}/keystore.pem"

    - name: import chain-ca keystore
      shell: >
        cat {{ searchguard_ca_dir }}/chain-ca.pem {{ searchguard_ca_dir }}/keystore.pem | keytool
        -importcert \
        -keystore {{ searchguard_ca_dir }}/keystore.jks
        -storepass password
        -noprompt
        -alias {{ ansible_hostname }}

  when: not keystore_stat.stat.exists

- name: "check {{ searchguard_admin.name }}.jks"
  stat:
    path: "{{ searchguard_ca_dir }}/{{ searchguard_admin.name}}.jks"
  register: "searchguard_admin_stat"

- block:
    - name: "create {{ searchguard_admin.name }}.jks"
      command: >
        keytool -genkeypair
        -alias {{ searchguard_admin.name }}
        -keystore {{ searchguard_ca_dir }}/{{ searchguard_admin.name }}.jks
        -keyalg    RSA
        -keysize   2048
        -validity  3650
        -sigalg SHA256withRSA
        -keypass password
        -storepass password
        -dname "CN={{ searchguard_admin.commonName }},O={{ searchguard_admin.organizationName }},C={{ searchguard_admin.countryName }}"
      args:
        creates: "{{ searchguard_ca_dir }}/{{ searchguard_admin.name }}.jks"

    - name: "create {{ searchguard_admin.name }} csr"
      command: >
        keytool -certreq
        -alias {{ searchguard_admin.name }}
        -keystore {{ searchguard_ca_dir }}/{{ searchguard_admin.name }}.jks
        -file {{ searchguard_ca_dir }}/{{ searchguard_admin.name }}.csr
        -keyalg  RSA
        -keypass password
        -storepass password
        -dname "CN={{ searchguard_admin.commonName }},O={{ searchguard_admin.organizationName }},C={{ searchguard_admin.countryName }}"
      args:
        creates: "{{ searchguard_ca_dir }}/{{ searchguard_admin.name }}.csr"

    - name: "create {{ searchguard_admin.name }} pem"
      command: >
        openssl ca
        -config {{ searchguard_ca_dir }}/signing-ca.cnf
        -in {{ searchguard_ca_dir }}/{{ searchguard_admin.name }}.csr
        -out {{ searchguard_ca_dir }}/{{ searchguard_admin.name }}.pem
        -notext
        -extensions v3_req
        -extensions server_ext
        -batch
        -passin pass:password
      args:
        creates: "{{ searchguard_ca_dir }}/{{ searchguard_admin.name }}.pem"

    - name: "import chain-ca {{ searchguard_admin.name }}"
      shell: >
        cat {{ searchguard_ca_dir }}/chain-ca.pem {{ searchguard_ca_dir }}/{{ searchguard_admin.name }}.pem | keytool
        -importcert \
        -keystore {{ searchguard_ca_dir }}/{{ searchguard_admin.name }}.jks
        -storepass password
        -noprompt
        -alias {{ searchguard_admin.name }}

  when: not searchguard_admin_stat.stat.exists
